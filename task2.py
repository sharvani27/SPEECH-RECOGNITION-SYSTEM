# -*- coding: utf-8 -*-
"""task2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XHp5Sj153zg-1MRUsTTssepAVjkRy7Qp
"""

!pip install SpeechRecognition pydub gradio pyngrok

import speech_recognition as sr
import gradio as gr
from pydub import AudioSegment
import tempfile
import os

# Function to transcribe audio
def transcribe_audio(audio_file):
    recognizer = sr.Recognizer()

    try:
        # Check if the audio_file is a file path (string) or an uploaded file object
        if isinstance(audio_file, str):  # Itâ€™s a file path
            audio_file_path = audio_file
        else:  # It's a file-like object (gr.Audio gives a file-like object in this case)
            with tempfile.NamedTemporaryFile(delete=False, suffix=".wav") as temp_file:
                # If it's a .mp3 file, convert it to .wav
                if audio_file.name.endswith('.mp3'):
                    sound = AudioSegment.from_mp3(audio_file)
                    sound.export(temp_file.name, format="wav")
                else:
                    temp_file.write(audio_file.read())
                audio_file_path = temp_file.name

        # Load the audio file
        with sr.AudioFile(audio_file_path) as source:
            audio = recognizer.record(source)

        # Use Google Speech Recognition
        text = recognizer.recognize_google(audio)
        return text

    except sr.UnknownValueError:
        return "Sorry, I couldn't understand the audio."
    except sr.RequestError:
        return "There was an issue with the API request."
    except Exception as e:
        return f"An unexpected error occurred: {str(e)}"

# Define the Gradio interface
iface = gr.Interface(
    fn=transcribe_audio,
    inputs=gr.Audio(type="filepath", label="Upload Audio (WAV or MP3)"),  # Changed to 'filepath'
    outputs="text",
    live=False,  # Make sure it's not live so users can click submit
    title="Speech-to-Text Transcription Tool",  # Add a title
    description="Upload an audio file (WAV or MP3) and click submit to transcribe it to text.",  # Description
    allow_flagging="never",  # No need to allow flagging
    theme="default",  # Use default theme
    css="""
        .gradio-container {background-color: #D8B2D1;}  # Lilac background color
        .gradio-button {background-color: #6A0DAD; color: white;}  # Purple submit button
        .gradio-button:hover {background-color: #8A2BE2;}  # Lighter purple on hover
    """  # Custom CSS for button and background
)

# Launch the app
iface.launch(share=True)